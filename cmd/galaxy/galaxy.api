info(
	title:galaxy
	desc: galaxy
	author: Michael
	email: 1214534601@qq.com
)

type UserLoginRequest {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type TokenResponse {
	Auth string `json:"auth"`
}

// user-add
type UserAddRequest {
	Name     string `json:"name"`
	Email    string `json:"email"`
	Password string `json:"password"`
	GroupID  int    `json:"groupID"`
}

type UserGetResponse {
	Name    string `json:"name"`
	GroupId int    `json:"groupId"`
	Email   string `json:"email"`
}

type InstancesRequest {
	Page int `json:"page"`
	Size int `json:"size"`
}

type Dm {
	ID              int        `json:"id"`
	Name            string     `json:"name"`
	SourceType      string     `json:"sourceType"`
	SourceDsn       string     `json:"sourceDsn"`
	SourceTable     string     `json:"sourceTable"`
	SourceDb        string     `json:"sourceDb"`
	SourceQueryKey  string     `json:"sourceQueryKey"`
	TargetType      string     `json:"targetType"`
	TargetShards    [][]string `json:"targetShards"`
	TargetDB        string     `json:"targetDB"`
	TargetChProxy   string     `json:"targetChProxy"`
	TargetTable     string     `json:"targetTable"`
	WindowStartHour int        `json:"windowStartHour"`
	WindowEndHour   int        `json:"windowEndHour"`
	Status          string     `json:"status"`
	Information     string     `json:"information"`
	CreateTime      string     `json:"createTime"`
	UpdateTime      string     `json:"updateTime"`
}
type DmListResponse {
	DmList      []Dm        `json:"dmList"`
	PageAndSize PageAndSize `json:"pageAndSize"`
}
type DefaultConfigResponse {
	QueryNode string     `json:"queryNode"`
	Shards    [][]string `json:"shards"`
	Cluster   string     `json:"cluster"`
}

// dm-add
type Source {
	Dsn            string   `json:"dsn"`
	Tables         []string `json:"tables"`
	Suffix         string   `json:"suffix"`
	SelectedTable  []string `json:"selectedTable"`
	CreateTableSql []string `json:"createTableSql"`
	QueryKey       []string `json:"queryKey"`
}

type DeleteConnectorRequest {
	Type     string `json:"type"`
	SourceId string `json:"sourceId"`
}
type Target {
	Databases        []string `json:"databases"`
	SelectedDatabase string   `json:"selectedDatabase"`
}
type DmModel {
	Source          Source `json:"source"`
	Target          Target `json:"target"`
	WindowStartHour string `json:"windowStartHour"`
	WindowEndHour   string `json:"windowEndHour"`
}
type PageAndSize {
	Page int `json:"page"`
	Size int `json:"size"`
}
type ListRequest {
	DbName string `json:"dbName"`
	PageAndSize
}

// list-tables
type String {
	String string `json:"string"`
}
type StringList {
	StringList []string `json:"stringList"`
}

// generate-create-sql
type GenerateCreateSqlRequest {
	Dsn      string   `json:"dsn"`
	Table    []string `json:"table"`
	Database string   `json:"database"`
	WithTime string   `json:"withTime,optional"`
}
type GenerateCreateSqlResponse {
	Sql           []string `json:"sql"`
	QueryKey      []string `json:"queryKey"`
	FailedTables  []string `json:"failedTables"`
	FailedReasons []string `json:"failedReasons"`
}

// exec-sql
type ExecSqlRequest {
	Sql []string `json:"sql"`
}

// rtu-list
type Rtu {
	ID             int        `json:"id"`
	Name           string     `json:"name"`
	SourceType     string     `json:"sourceType"`
	SourceTopic    string     `json:"sourceTopic"`
	SourceDsn      string     `json:"sourceDsn"`
	SourceTable    string     `json:"sourceTable"`
	SourceDb       string     `json:"sourceDb"`
	SourceQueryKey string     `json:"sourceQueryKey"`
	TargetType     string     `json:"targetType"`
	TargetShards   [][]string `json:"targetShards"`
	TargetDB       string     `json:"targetDB"`
	TargetChProxy  string     `json:"targetChProxy"`
	TargetTable    string     `json:"targetTable"`
	Status         string     `json:"status"`
	Information    string     `json:"information"`
	CreateTime     string     `json:"createTime"`
	UpdateTime     string     `json:"updateTime"`
}
type RtuList {
	RtuList     []Rtu       `json:"rtuList"`
	PageAndSize PageAndSize `json:"pageAndSize"`
}

// rtu-add
type RtuModel {
	Source Source `json:"source"`
	Target Target `json:"target"`
}

// connector-add
type ConnectorModel {
	Source Source `json:"source"`
}
type Connector {
	SourceType  string `json:"sourceType"`
	SourceTable string `json:"sourceTable"`
	SourceDB    string `json:"sourceDb"`
	SourceId    string `json:"sourceId"`
	CreateTime  string `json:"createTime"`
	UpdateTime  string `json:"updateTime"`
}
type ConnectorListResponse {
	ConnectorList []*Connector `json:"connectorList"`
	PageAndSize   PageAndSize  `json:"pageAndSize"`
}
type ExecSqlResponse {
	FailedTables  []string `json:"failedTables"`
	FailedReasons []string `json:"failedReasons"`
}
type GetUserInfoRequest {
	Email string `json:"email"`
}

type GetUserInfoResponse {
	Roles        []string `json:"roles"`
	Name         string   `json:"name"`
	Avatar       string   `json:"avatar"`
	Introduction string   `json:"introduction"`
}

@server(
	jwt: Auth
)

service galaxy-api {
	@doc(
		summary: user-add
	)
	@handler addHandler
	post /galaxy/user/add (UserAddRequest)
	
	@doc(
		summary: dm-list
	)
	@handler dmListHandler
	post /galaxy/html/dm-list () returns (DmListResponse)
	
	@doc(
		summary: dm-add
	)
	@handler dmAddHandler
	post /galaxy/html/dm-add (DmModel) returns (DmModel)
	
	@doc(
		summary: list-tables
	)
	@handler listTableHandler
	post /galaxy/html/list-tables (String) returns (StringList)
	
	@doc(
		summary: list-databases
	)
	@handler listDatabasesHandler
	post /galaxy/html/list-databases (String) returns (StringList)
	
	@doc(
		summary: list-databases
	)
	@handler databaseListHandler
	post /galaxy/html/database-list (String) returns (StringList)
	
	@doc(
		summary: config-default
	)
	@handler defaultConfigHandler
	get /galaxy/html/default-config () returns (DefaultConfigResponse)
	
	@doc(
		summary: generate-create-sql
	)
	@handler generateCreateSqlHandler
	post /galaxy/html/generate-create-sql (GenerateCreateSqlRequest) returns (GenerateCreateSqlResponse)
	
	@doc(
		summary: exec-sql
	)
	@handler execSqlHandler
	post /galaxy/html/exec-sql (ExecSqlRequest)
	
	@doc(
		summary: dm-stop
	)
	@handler dmStopHandler
	post /galaxy/html/dm-stop (String)
	
	@doc(
		summary: dm-delete
	)
	@handler dmDeleteHandler
	post /galaxy/html/dm-delete (String)
	
	@doc(
		summary: dm-redo
	)
	@handler dmRedoHandler
	post /galaxy/html/dm-redo (String)
	
	@doc(
		summary: rtu-list
	)
	@handler rtuListHandler
	post /galaxy/html/rtu-list () returns (RtuList)
	
	@doc(
		summary: rtu-add
	)
	@handler rtuAddHandler
	post /galaxy/html/rtu-add (RtuModel) returns (RtuModel)
	
	@doc(
		summary: rtu-stop
	)
	@handler rtuStopHandler
	post /galaxy/html/rtu-stop (String)
	
	@doc(
		summary: rtu-delete
	)
	@handler rtuDeleteHandler
	post /galaxy/html/rtu-delete (String)
	
	@doc(
		summary: rtu-redo
	)
	@handler rtuRedoHandler
	post /galaxy/html/rtu-redo (String)
	
	@doc(
		summary: connector-list
	)
	@handler connectorListHandler
	post /galaxy/html/connector-list () returns (StringList)
	
	@doc(
		summary: connector-add
	)
	@handler connectorAddHandler
	post /galaxy/html/connector-add (ConnectorModel)
	
	@doc(
		summary: connector-delete
	)
	@handler connectorDeleteHandler
	post /galaxy/html/connector-delete (String)
}

service galaxy-api {
	@doc(
		summary: user-login
	)
	@handler loginHandler
	post /galaxy/user/login (UserLoginRequest) returns (TokenResponse)
	@server(
		handler: getUserInfoHandler
	)
	post /accesscenter/get-user-info (GetUserInfoRequest) returns (GetUserInfoResponse)
}